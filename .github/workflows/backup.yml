name: Backup Repository to S3

on:
  schedule:
    - cron: '0 2 * * 0' # Runs every Sunday at 2 AM UTC
    - cron: '0 * * * *' # Runs every minutes
  workflow_dispatch: # Allows manual trigger of the workflow
    inputs: # Optional inputs for customization
      environment:
        description: 'Deployment environment (e.g., staging, production)'
        required: true
        default: 'staging'

jobs:
  backup:
    name: Backup Repository and Upload to S3
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # Step 3: Backup S3 bucket
      - name: Backup S3 bucket Cloudformation
        run: |
          aws cloudformation validate-template \
            --template-body file://aws_cloudformation/backup.yml

          BackupBucketName=$(aws cloudformation describe-stacks --stack-name $STACK_NAME --query "Stacks[0].Outputs[?OutputKey=='BackupBucketName'].OutputValue" --output text)
          echo "BackupBucketName=${BackupBucketName}" >> $GITHUB_ENV
            
      # Step 4: Compress the repository into a tarball
      - name: Create repository backup
        run: |
          tar -czvf repo-backup.tar.gz . # Compress the entire repository
          echo "Backup file created: repo-backup.tar.gz"

      # Step 5: Upload the backup to S3
      - name: Upload backup to S3
        run: |
          BACKUP_NAME="repo-backup-$(date +'%Y-%m-%d_%H-%M-%S').tar.gz"
          aws s3 cp repo-backup.tar.gz s3://${{ env.BackupBucketName }}/$BACKUP_NAME
          echo "Backup uploaded as $BACKUP_NAME"

      # Optional Step 6: List backups in S3
      - name: List backups in S3
        run: aws s3 ls s3://${{ env.BackupBucketName }}/