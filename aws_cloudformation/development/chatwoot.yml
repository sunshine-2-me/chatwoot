AWSTemplateFormatVersion: '2010-09-09'
Description: 'CloudFormation template for deploying Chatwoot on an EC2 instance'

Parameters:
  Environment:
    Description: "Deployment environment (e.g., dev, prod)"
    Type: String
    AllowedValues:
      - dev
      - prod
    Default: dev

  KeyPairName:
    Description: 'Name of an existing EC2 KeyPair to enable SSH access to the instances'
    Type: 'AWS::EC2::KeyPair::KeyName'


Resources:
  SumoChatwootLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: "/chatwoot/logs"
      RetentionInDays: 7 # Retain logs for 7 days (customize based on needs)
      Tags:
        - Key: Name
          Value: !Sub "sumo-chatwoot-logs-${Environment}"
        - Key: Environment
          Value: !Ref Environment

  SumoChatwootLogsRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: CloudWatchAgentPolicy
          PolicyDocument: 
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: "*"
  
  SumoChatwootInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref SumoChatwootLogsRole

  SumoChatwootInstance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: c5.xlarge
      KeyName: !Ref KeyPairName
      ImageId: ami-005fc0f236362e99f # Ubuntu 20.04 LTS AMI in us-east-1, replace with your region's ID
      IamInstanceProfile: !Ref SumoChatwootInstanceProfile
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeSize: 60
            VolumeType: gp2
      Tags:
        - Key: Name
          Value: !Sub "sumo-chatwoot-instance-${Environment}"
        - Key: Environment
          Value: !Ref Environment
      NetworkInterfaces:
        - AssociatePublicIpAddress: false
          DeviceIndex: 0
          SubnetId: !ImportValue 
            Fn::Sub: "SumoChatwoot-${Environment}-PrivateSubnet1Id"
          GroupSet:
            - !ImportValue 
              Fn::Sub: "SumoChatwoot-${Environment}-LoadBalancerSGId"
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          # Update and upgrade system packages
          sudo apt-get update -y
          sudo apt-get upgrade -y
          
          # Install the agent
          wget https://s3.amazonaws.com/amazoncloudwatch-agent/ubuntu/amd64/latest/amazon-cloudwatch-agent.deb
          sudo dpkg -i -E ./amazon-cloudwatch-agent.deb
          
          # Verify the installation
          /opt/aws/amazon-cloudwatch-agent/bin/amazon-cloudwatch-agent-ctl -m ec2 -a status

          # Create CloudWatch Agent configuration file
          cat <<EOF | sudo tee /opt/aws/amazon-cloudwatch-agent/etc/amazon-cloudwatch-agent.json > /dev/null
          {
            "logs": {
              "logs_collected": {
                "files": {
                  "collect_list": [
                    {
                      "file_path": "/var/log/chatwoot-setup.log",
                      "log_group_name": "/chatwoot/logs",
                      "log_stream_name": "{instance_id}/chatwoot-app-logs"
                    }
                  ]
                }
              }
            }
          }
          EOF

          # Start the CloudWatch Agent
          sudo /opt/aws/amazon-cloudwatch-agent/bin/amazon-cloudwatch-agent-ctl -a fetch-config -m ec2 -c file:/opt/aws/amazon-cloudwatch-agent/etc/amazon-cloudwatch-agent.json -s

Outputs:
  SumoChatwootInstanceId:
    Description: 'The ID of the Chatwoot EC2 instance'
    Value: !Ref SumoChatwootInstance
    Export:
      Name: !Sub "SumoChatwoot-${Environment}-InstanceId"

  SumoChatwootInstanceIP:
    Description: 'Public IP address of the Chatwoot EC2 instance'
    Value: !GetAtt SumoChatwootInstance.PrivateIp
    Export:
      Name: !Sub "SumoChatwoot-${Environment}-InstanceIP"
