AWSTemplateFormatVersion: '2010-09-09'
Description: 'CloudFormation template for Chatwoot Application Load Balancer'

Parameters:
  Environment:
    Description: "Deployment environment (e.g., dev, prod)"
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - prod

  SumoChatwootCertificateArn:
    Description: Certificate ARN
    Type: String

Resources:
  # Security Group for ALB
  SumoChatwootLoadBalancerSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !ImportValue 
        Fn::Sub: "SumoChatwoot-${Environment}-VPCId"
      GroupDescription: Security group for Chatwoot ALB
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 3000
          ToPort: 3000
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: !Sub "sumo-chatwoot-loadbalancer-sg-${Environment}"
        - Key: Environment
          Value: !Ref Environment

  # Application Load Balancer
  SumoChatwootLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: !Sub "sumo-chatwoot-loadbalancer-${Environment}"
      Scheme: internet-facing
      Subnets:
        - !ImportValue 
          Fn::Sub: "SumoChatwoot-${Environment}-PublicSubnet1Id"
        - !ImportValue 
          Fn::Sub: "SumoChatwoot-${Environment}-PublicSubnet2Id"
      SecurityGroups:
        - !Ref SumoChatwootLoadBalancerSG
      IpAddressType: ipv4
      Tags:
        - Key: Name
          Value: !Sub "sumo-chatwoot-loadbalancer-${Environment}"
        - Key: Environment
          Value: !Ref Environment

  # Target Group for Chatwoot Instances
  SumoChatwootTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !Sub "sumo-chatwoot-tg-${Environment}"
      VpcId: !ImportValue 
        Fn::Sub: "SumoChatwoot-${Environment}-VPCId"
      Protocol: HTTP
      Port: 3000
      TargetType: instance
      HealthCheckProtocol: HTTP
      HealthCheckPort: 3000
      HealthCheckPath: /api
      Matcher:
        HttpCode: 200

  # Listener for HTTP
  SumoChatwootHTTPListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref SumoChatwootLoadBalancer
      Protocol: HTTP
      Port: 80
      DefaultActions:
        - Type: redirect
          RedirectConfig:
            Protocol: HTTPS
            Port: "443"
            StatusCode: HTTP_301

  # Listener for HTTPS
  SumoChatwootHTTPSListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref SumoChatwootLoadBalancer
      Protocol: HTTPS
      Port: 443
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref SumoChatwootTargetGroup
      Certificates:
        - CertificateArn: !Ref SumoChatwootCertificateArn  

Outputs:
  SumoChatwootLoadBalancerSGId:
    Description: 'The ID of the load balancer'
    Value: !Ref SumoChatwootLoadBalancerSG
    Export:
      Name: !Sub "SumoChatwoot-${Environment}-LoadBalancerSGId"

  SumoChatwootLoadBalancerDNSName:
    Description: 'DNS name of the load balancer'
    Value: !GetAtt SumoChatwootLoadBalancer.DNSName
    Export:
      Name: !Sub "SumoChatwoot-${Environment}-LoadBalancerDNSName"

  SumoChatwootLoadBalancerCanonicalHostedZoneId:
    Description: 'CanonicalHostedZoneId of the load balancer'
    Value: !GetAtt SumoChatwootLoadBalancer.CanonicalHostedZoneID
    Export:
      Name: !Sub "SumoChatwoot-${Environment}-LoadBalancerCanonicalHostedZoneId"

  SumoChatwootTargetGroupArn:
    Description: 'The Arn of the TargetGroup'
    Value: !GetAtt  SumoChatwootTargetGroup.TargetGroupArn
    Export:
      Name: !Sub "SumoChatwoot-${Environment}-TargetGroupArn"
