AWSTemplateFormatVersion: "2010-09-09"
Description: CloudFormation template to create network infrastructure for Chatwoot

Parameters:
  SumoChatwootDBMasterUsername:
    Description: The master username for the RDS PostgreSQL instance
    Type: String
    Default: admin

  SumoChatwootDBMasterUserPassword:
    Description: The master user password for the RDS PostgreSQL instance
    Type: String
    NoEcho: true

  SumoChatwootCertificateArn:
    Description: Certificate ARN
    Type: String

  SumoChatwootKeyName:
    Description: Name of an EC2 KeyPair to enable SSH access
    Type: AWS::EC2::KeyPair::KeyName

  GithubToken:
    Description: Token of github
    Type: String
    NoEcho: true

Resources:
  # VPC
  SumoChatwootVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: sumo-chatwoot-vpc

  # Internet Gateway
  SumoChatwootInternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: sumo-chatwoot-igw

  SumoChatwootAttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref SumoChatwootVPC
      InternetGatewayId: !Ref SumoChatwootInternetGateway

  # Subnets
  SumoChatwootPublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref SumoChatwootVPC
      CidrBlock: 10.0.0.0/24
      AvailabilityZone: us-east-1a
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: sumo-chatwoot-public-1

  SumoChatwootPublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref SumoChatwootVPC
      CidrBlock: 10.0.1.0/24
      AvailabilityZone: us-east-1b
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: sumo-chatwoot-public-2

  SumoChatwootPrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref SumoChatwootVPC
      CidrBlock: 10.0.2.0/24
      AvailabilityZone: us-east-1a
      Tags:
        - Key: Name
          Value: sumo-chatwoot-private-1

  SumoChatwootPrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref SumoChatwootVPC
      CidrBlock: 10.0.3.0/24
      AvailabilityZone: us-east-1b
      Tags:
        - Key: Name
          Value: sumo-chatwoot-private-2

  # NAT Gateways
  SumoChatwootEIPForNat1:
    Type: AWS::EC2::EIP
    DependsOn: SumoChatwootAttachGateway
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: sumochatwoot-eip-nat-1

  SumoChatwootNATGateway1:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt SumoChatwootEIPForNat1.AllocationId
      SubnetId: !Ref SumoChatwootPublicSubnet1
      Tags:
        - Key: Name
          Value: sumo-chatwoot-nat-1

  SumoChatwootEIPForNat2:
    Type: AWS::EC2::EIP
    DependsOn: SumoChatwootAttachGateway
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: sumochatwoot-eip-nat-2

  SumoChatwootNATGateway2:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt SumoChatwootEIPForNat2.AllocationId
      SubnetId: !Ref SumoChatwootPublicSubnet2
      Tags:
        - Key: Name
          Value: sumo-chatwoot-nat-2

  # Route Tables
  SumoChatwootPublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref SumoChatwootVPC
      Tags:
        - Key: Name
          Value: sumo-chatwoot-public-rt

  SumoChatwootPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: SumoChatwootAttachGateway
    Properties:
      RouteTableId: !Ref SumoChatwootPublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref SumoChatwootInternetGateway

  SumoChatwootPrivateRouteTable1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref SumoChatwootVPC
      Tags:
        - Key: Name
          Value: sumo-chatwoot-private-a

  SumoChatwootPrivateRoute1:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref SumoChatwootPrivateRouteTable1
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref SumoChatwootNATGateway1

  SumoChatwootPrivateRouteTable2:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref SumoChatwootVPC
      Tags:
        - Key: Name
          Value: sumo-chatwoot-private-b

  SumoChatwootPrivateRoute2:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref SumoChatwootPrivateRouteTable2
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref SumoChatwootNATGateway2

  # Subnet Route Table Associations
  SumoChatwootPublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref SumoChatwootPublicSubnet1
      RouteTableId: !Ref SumoChatwootPublicRouteTable

  SumoChatwootPublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref SumoChatwootPublicSubnet2
      RouteTableId: !Ref SumoChatwootPublicRouteTable

  SumoChatwootPrivateSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref SumoChatwootPrivateSubnet1
      RouteTableId: !Ref SumoChatwootPrivateRouteTable1

  SumoChatwootPrivateSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref SumoChatwootPrivateSubnet2
      RouteTableId: !Ref SumoChatwootPrivateRouteTable2

  # Security Group for ALB
  SumoChatwootLoadBalancerSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref SumoChatwootVPC
      GroupDescription: Security group for Chatwoot ALB
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 3000
          ToPort: 3000
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: sumo-chatwoot-loadbalancer-sg

  # Application Load Balancer
  SumoChatwootLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: sumo-chatwoot-loadbalancer
      Scheme: internet-facing
      Subnets:
        - !Ref SumoChatwootPublicSubnet1
        - !Ref SumoChatwootPublicSubnet2
      SecurityGroups:
        - !Ref SumoChatwootLoadBalancerSG
      IpAddressType: ipv4
      Tags:
        - Key: Name
          Value: sumo-chatwoot-loadbalancer

  # Target Group for Chatwoot Instances
  SumoChatwootTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: sumo-chatwoot-tg
      VpcId: !Ref SumoChatwootVPC
      Protocol: HTTP
      Port: 3000
      TargetType: instance
      HealthCheckProtocol: HTTP
      HealthCheckPort: 3000
      HealthCheckPath: /api
      Matcher:
        HttpCode: 200

  # Listener for HTTP
  SumoChatwootHTTPListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref SumoChatwootLoadBalancer
      Protocol: HTTP
      Port: 80
      DefaultActions:
        - Type: redirect
          RedirectConfig:
            Protocol: HTTPS
            Port: "443"
            StatusCode: HTTP_301

  # Listener for HTTPS
  SumoChatwootHTTPSListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref SumoChatwootLoadBalancer
      Protocol: HTTPS
      Port: 443
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref SumoChatwootTargetGroup
      Certificates:
        - CertificateArn: !Ref SumoChatwootCertificateArn

  # Security Group for RDS
  SumoChatwootRDSDBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref SumoChatwootVPC
      GroupDescription: Security group for Chatwoot RDS
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 5432
          ToPort: 5432
          SourceSecurityGroupId: !Ref SumoChatwootLoadBalancerSG

  # RDS Subnet Group
  SumoChatwootRDSSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: Subnet group for Chatwoot RDS
      SubnetIds:
        - !Ref SumoChatwootPrivateSubnet1
        - !Ref SumoChatwootPrivateSubnet2

  # RDS Instance
  SumoChatwootRDSDBInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      DBInstanceIdentifier: sumo-chatwoot-db
      AllocatedStorage: 20
      DBInstanceClass: db.t3.micro
      Engine: postgres
      MasterUsername: !Ref SumoChatwootDBMasterUsername
      MasterUserPassword: !Ref SumoChatwootDBMasterUserPassword
      MultiAZ: true
      VPCSecurityGroups:
        - !Ref SumoChatwootRDSDBSecurityGroup
      DBSubnetGroupName: !Ref SumoChatwootRDSSubnetGroup
      PubliclyAccessible: false

  # Security Group for Redis
  SumoChatwootRedisSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref SumoChatwootVPC
      GroupDescription: Security group for Chatwoot Redis
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 6379
          ToPort: 6379
          SourceSecurityGroupId: !Ref SumoChatwootLoadBalancerSG

  # ElastiCache Subnet Group
  SumoChatwootRedisSubnetGroup:
    Type: AWS::ElastiCache::SubnetGroup
    Properties:
      Description: Subnet group for Chatwoot Redis
      SubnetIds:
        - !Ref SumoChatwootPrivateSubnet1
        - !Ref SumoChatwootPrivateSubnet2

  # Redis Cluster
  SumoChatwootRedisCluster:
    Type: AWS::ElastiCache::ReplicationGroup
    Properties:
      ReplicationGroupDescription: Chatwoot Redis cluster
      ReplicationGroupId: sumo-chatwoot-redis
      Engine: redis
      CacheNodeType: cache.t3.micro
      NumCacheClusters: 2
      AutomaticFailoverEnabled: true
      SecurityGroupIds:
        - !Ref SumoChatwootRedisSecurityGroup
      CacheSubnetGroupName: !Ref SumoChatwootRedisSubnetGroup

  # Security Group for Bastion Hosts
  SumoChatwootBastionSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref SumoChatwootVPC
      GroupDescription: Security group for Bastion hosts
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: sumo-chatwoot-bastion-sg

  # Bastion Host in Public Subnet 1
  SumoChatwootBastionHostA:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t3.micro
      KeyName: !Ref SumoChatwootKeyName
      SubnetId: !Ref SumoChatwootPublicSubnet1
      ImageId: ami-005fc0f236362e99f # Ubuntu 20.04 LTS AMI in us-east-1, replace with your region's ID
      SecurityGroupIds:
        - !Ref SumoChatwootBastionSecurityGroup
      Tags:
        - Key: Name
          Value: sumo-chatwoot-bastion-a

  # Bastion Host in Public Subnet 2
  SumoChatwootBastionHostB:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t3.micro
      KeyName: !Ref SumoChatwootKeyName
      SubnetId: !Ref SumoChatwootPublicSubnet2
      ImageId: ami-005fc0f236362e99f # Ubuntu 20.04 LTS AMI in us-east-1, replace with your region's ID
      SecurityGroupIds:
        - !Ref SumoChatwootBastionSecurityGroup
      Tags:
        - Key: Name
          Value: sumo-chatwoot-bastion-b

  SumoChatwootInstance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: c5.xlarge
      KeyName: !Ref SumoChatwootKeyName
      ImageId: ami-005fc0f236362e99f # Ubuntu 20.04 LTS AMI in us-east-1, replace with your region's ID
      # SubnetId: !Ref SumoChatwootPrivateSubnet1
      # SecurityGroupIds:
      #   - !Ref SumoChatwootLoadBalancerSG
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeSize: 60
            VolumeType: gp2
      Tags:
        - Key: Name
          Value: sumo-chatwoot
      NetworkInterfaces:
        - AssociatePublicIpAddress: true
          DeviceIndex: 0
          SubnetId: !Ref SumoChatwootPublicSubnet1
          GroupSet:
            - !Ref SumoChatwootLoadBalancerSG
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          # Update and upgrade system packages
          apt-get update -y
          apt-get upgrade -y

          # Install necessary utilities
          apt-get install -y git

          # Define environment variables
          export POSTGRES_HOST=${SumoChatwootRDSDBInstance.Endpoint.Address}
          export POSTGRES_USERNAME=${SumoChatwootDBMasterUsername}
          export POSTGRES_PASSWORD=${SumoChatwootDBMasterUserPassword}
          export REDIS_HOST=${SumoChatwootRDSDBInstance.Endpoint.Address}
          export RAILS_ENV='production'

          # Define the directory where the repository will be cloned
          REPO_DIR=/home/ubuntu/sumo-chatwoot
          # Configure Git with the GitHub token for authentication
          export GIT_ASKPASS=echo
          # Check if the directory exists
          if [ -d "$REPO_DIR" ]; then
            echo "Directory exists. Pulling latest changes."
            cd $REPO_DIR
            git pull || echo "Failed to pull latest changes"
          else
            echo "Directory does not exist. Cloning repository."
            git clone https://${GithubToken}@github.com/sunshine-2-me/chatwoot.git "$REPO_DIR"
            cd "$REPO_DIR" || exit
          fi
          chmod 777 install.sh
          sudo ./install.sh --install 
          
          EOF


  # SumoChatwootLaunchConfiguration:
  #   Type: AWS::AutoScaling::LaunchConfiguration
  #   Properties:
  #     ImageId: ami-005fc0f236362e99f # Ubuntu 20.04 LTS AMI in us-east-1, replace with your region's ID
  #     InstanceType: c5.xlarge
  #     SecurityGroups:
  #       - !Ref SumoChatwootLoadBalancerSG
  #     KeyName: !Ref SumoChatwootKeyName
  #     BlockDeviceMappings:
  #       - DeviceName: /dev/sda1
  #         Ebs:
  #           VolumeSize: 60
  #           VolumeType: gp2
  #     UserData:
  #       Fn::Base64: !Sub |
  #         #!/bin/bash
  #         # Update and upgrade system packages
  #         apt-get update -y
  #         apt-get upgrade -y

  #         # Install necessary utilities
  #         apt-get install -y wget curl

  #         # Download Chatwoot installation script
  #         wget https://get.chatwoot.app/linux/install.sh
  #         chmod 755 install.sh

  #         # Run the Chatwoot installation script
  #         ./install.sh --install

  #         # Switch to chatwoot user and configure environment
  #         sudo -i -u chatwoot bash <<EOF
  #         cd chatwoot
  #         # Update .env file with database and Redis configuration
  #         cat <<EOT >> .env
  #         DATABASE_URL=postgres://${SumoChatwootDBMasterUsername}:${SumoChatwootDBMasterUserPassword}@${SumoChatwootRDSDBInstance.Endpoint.Address}:5432/chatwoot_production
  #         REDIS_URL=redis://${SumoChatwootRDSDBInstance.Endpoint.Address}:6379
  #         EOT
  #         # Run database migrations
  #         RAILS_ENV=production bundle exec rake db:prepare
  #         EOF

  #         # Restart Chatwoot to apply changes
  #         sudo cwctl --restart

  # # Auto Scaling Group
  # SumoChatwootAutoScalingGroup:
  #   Type: AWS::AutoScaling::AutoScalingGroup
  #   Properties:
  #     LaunchConfigurationName: !Ref SumoChatwootLaunchConfiguration
  #     MinSize: "2"
  #     MaxSize: "4"
  #     DesiredCapacity: "2"
  #     VPCZoneIdentifier:
  #       - !Ref SumoChatwootPrivateSubnet1
  #       - !Ref SumoChatwootPrivateSubnet2
  #     TargetGroupARNs:
  #       - !Ref SumoChatwootTargetGroup
  #     Tags:
  #       - Key: Name
  #         Value: sumo-chatwoot-instance
  #         PropagateAtLaunch: true
  #     Cooldown: 300 # Default cooldown period for the Auto Scaling Group in seconds

  # # Scaling Policies
  # SumoChatwootScalingPolicy:
  #   Type: AWS::AutoScaling::ScalingPolicy
  #   Properties:
  #     AutoScalingGroupName: !Ref SumoChatwootAutoScalingGroup
  #     PolicyType: TargetTrackingScaling
  #     TargetTrackingConfiguration:
  #       PredefinedMetricSpecification:
  #         PredefinedMetricType: ASGAverageCPUUtilization
  #       TargetValue: 50.0 # Set a balanced target value, e.g., 35%
  #     EstimatedInstanceWarmup: 300 # Optional: Time in seconds that instances take to become ready to handle traffic
  #     Cooldown: 180 # Cooldown in the scaling policy if needed (overrides the ASG cooldown)

Outputs:
  # VPCId:
  #   Description: VPC ID
  #   Value: !Ref SumoChatwootVPC

  PublicSubnets:
    Description: Public Subnets
    Value:
      !Join [
        ",",
        [!Ref SumoChatwootPublicSubnet1, !Ref SumoChatwootPublicSubnet2],
      ]

  # PrivateSubnets:
  #   Description: Private Subnets
  #   Value:
  #     !Join [
  #       ",",
  #       [!Ref SumoChatwootPrivateSubnet1, !Ref SumoChatwootPrivateSubnet2],
  #     ]

  LoadBalancerDNSName:
    Description: DNS name of the ALB
    Value: !GetAtt SumoChatwootLoadBalancer.DNSName

  ChatwootInstanceId:
    Description: "Instance ID of the Chatwoot EC2 instance"
    Value: !Ref SumoChatwootInstance

  RDSInstanceEndpoint:
    Description: Endpoint of the RDS PostgreSQL instance
    Value: !GetAtt SumoChatwootRDSDBInstance.Endpoint.Address

  RedisPrimaryEndpoint:
    Description: Primary endpoint of the Redis cluster
    Value: !GetAtt SumoChatwootRedisCluster.PrimaryEndPoint.Address

  InstancePublicIP:
    Description: Public IP address of the EC2 instance
    Value: !GetAtt SumoChatwootInstance.PublicIp
    Export:
      Name: SumoChatwootInstancePublicIP

  # AutoScalingGroupName:
  #   Description: Name of the Auto Scaling Group
  #   Value: !Ref SumoChatwootAutoScalingGroup


